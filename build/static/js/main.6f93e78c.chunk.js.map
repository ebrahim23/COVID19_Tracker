{"version":3,"sources":["components/Cards/Cards.module.css","components/Cards/Cards.jsx","api/index.js","components/Chart/Chart.jsx","components/CountryPicker/CountryPicker.jsx","image.png","App.js","index.js","App.module.css","components/Chart/Chart.module.css","components/CountryPicker/Picker.module.css"],"names":["module","exports","Cards","data","confirmed","deaths","recovered","lastUpdate","className","styles","container","Grid","spacing","justify","item","component","Card","cx","card","infected","xs","md","CardContent","Typography","color","gutterBottom","variant","start","end","value","duration","separator","Date","toDateString","url","fetchData","country","a","changeCountry","axios","get","console","log","fetchDailyData","newData","map","dailyData","total","date","reportDate","fetchContries","countries","name","Chart","useState","setDailyData","useEffect","fetchApi","lineChart","length","labels","datasets","label","borderColor","fill","backgroundColor","barChart","options","legend","display","title","text","CountryPicker","handleCountries","theCountries","setTheCountries","getContries","FormControl","formControl","NativeSelect","defaultValue","onChange","e","target","i","App","state","fetchedData","setState","this","src","logo","alt","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6f93e78c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__3BBMy\",\"card\":\"Cards_card__15sGf\",\"infected\":\"Cards_infected__2ySY3\",\"recovered\":\"Cards_recovered__3clog\",\"deaths\":\"Cards_deaths__3wsvp\"};","import React from \"react\";\r\nimport { Card, CardContent, Typography, Grid } from \"@material-ui/core\";\r\nimport styles from \"./Cards.module.css\";\r\nimport CountUp from \"react-countup\";\r\nimport cx from \"classnames\";\r\n\r\nfunction Cards({ data: { confirmed, deaths, recovered, lastUpdate } }) {\r\n  if (!confirmed) {\r\n    return \"Loading...\";\r\n  }\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      <Grid container spacing={3} justify=\"center\">\r\n        <Grid\r\n          item\r\n          component={Card}\r\n          className={cx(styles.card, styles.infected)}\r\n          xs={12}\r\n          md={3}\r\n        >\r\n          <CardContent>\r\n            <Typography color=\"textSecondary\" gutterBottom>\r\n              Infected\r\n            </Typography>\r\n            <Typography variant=\"h5\">\r\n              <CountUp\r\n                start={0}\r\n                end={confirmed.value}\r\n                duration={2.5}\r\n                separator=\",\"\r\n              />\r\n            </Typography>\r\n            <Typography color=\"textSecondary\">\r\n              {new Date(lastUpdate).toDateString()}\r\n            </Typography>\r\n            <Typography variant=\"body2\">\r\n              Number of active cases of COVID-19\r\n            </Typography>\r\n          </CardContent>\r\n        </Grid>\r\n        <Grid\r\n          item\r\n          component={Card}\r\n          className={cx(styles.card, styles.recovered)}\r\n          xs={12}\r\n          md={3}\r\n        >\r\n          <CardContent>\r\n            <Typography color=\"textSecondary\" gutterBottom>\r\n              Recovered\r\n            </Typography>\r\n            <Typography variant=\"h5\">\r\n              <CountUp\r\n                start={0}\r\n                end={recovered.value}\r\n                duration={2.5}\r\n                separator=\",\"\r\n              />\r\n            </Typography>\r\n            <Typography color=\"textSecondary\">\r\n              {new Date(lastUpdate).toDateString()}\r\n            </Typography>\r\n            <Typography variant=\"body2\">\r\n              Number of recoveries from COVID-19\r\n            </Typography>\r\n          </CardContent>\r\n        </Grid>\r\n        <Grid\r\n          item\r\n          component={Card}\r\n          className={cx(styles.card, styles.deaths)}\r\n          xs={12}\r\n          md={3}\r\n        >\r\n          <CardContent>\r\n            <Typography color=\"textSecondary\" gutterBottom>\r\n              Deaths\r\n            </Typography>\r\n            <Typography variant=\"h5\">\r\n              <CountUp\r\n                start={0}\r\n                end={deaths.value}\r\n                duration={2.5}\r\n                separator=\",\"\r\n              />\r\n            </Typography>\r\n            <Typography color=\"textSecondary\">\r\n              {new Date(lastUpdate).toDateString()}\r\n            </Typography>\r\n            <Typography variant=\"body2\">\r\n              Number of deaths caused by COVID-19\r\n            </Typography>\r\n          </CardContent>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Cards;\r\n","// Import the axios library to fetch data\r\nimport axios from \"axios\";\r\n\r\n// The API url\r\nconst url = \"https://covid19.mathdro.id/api\";\r\n\r\n// Fetch api function\r\nexport const fetchData = async (country) => {\r\n  let changeCountry = url;\r\n  if (country) {\r\n    changeCountry = `${url}/countries/${country}`;\r\n  }\r\n\r\n  try {\r\n    const {\r\n      data: { confirmed, deaths, recovered, lastUpdate },\r\n    } = await axios.get(changeCountry);\r\n\r\n    return { confirmed, deaths, recovered, lastUpdate };\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\n// Fetch Daily Data\r\nexport const fetchDailyData = async () => {\r\n  try {\r\n    const { data } = await axios.get(`${url}/daily`);\r\n\r\n    const newData = data.map((dailyData) => ({\r\n      confirmed: dailyData.confirmed.total,\r\n      deaths: dailyData.deaths.total,\r\n      date: dailyData.reportDate,\r\n    }));\r\n\r\n    return newData;\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\n// Fetch Countries Data\r\nexport const fetchContries = async () => {\r\n  try {\r\n    const {\r\n      data: { countries },\r\n    } = await axios.get(`${url}/countries`);\r\n    return countries.map((country) => country.name);\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { fetchDailyData } from \"../../api\";\r\nimport { Line, Bar } from \"react-chartjs-2\";\r\nimport styles from \"./Chart.module.css\";\r\n\r\nfunction Chart({ data: { confirmed, recovered, deaths }, country }) {\r\n  const [dailyData, setDailyData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchApi = async () => {\r\n      setDailyData(await fetchDailyData());\r\n    };\r\n\r\n    fetchApi();\r\n  }, []);\r\n\r\n  const lineChart = dailyData.length ? (\r\n    <Line\r\n      data={{\r\n        labels: dailyData.map(({ date }) => date),\r\n        datasets: [\r\n          {\r\n            data: dailyData.map(({ confirmed }) => confirmed),\r\n            label: \"Infected\",\r\n            borderColor: \"#3333ff\",\r\n            fill: true,\r\n          },\r\n          {\r\n            data: dailyData.map(({ deaths }) => deaths),\r\n            label: \"Deaths\",\r\n            borderColor: \"red\",\r\n            backgroundColor: \"rgba(255,0,0,.5)\",\r\n            fill: true,\r\n          },\r\n        ],\r\n      }}\r\n    />\r\n  ) : null;\r\n\r\n  const barChart = confirmed ? (\r\n    <Bar\r\n      data={{\r\n        labels: [\"Infeted\", \"Rcovered\", \"Deaths\"],\r\n        datasets: [\r\n          {\r\n            label: \"People\",\r\n            backgroundColor: [\r\n              \"rgba(0, 0, 250, 0.5)\",\r\n              \"rgba(0, 0, 250, 0.5)\",\r\n              \"rgba(250, 0, 0, 0.5)\",\r\n            ],\r\n            data: [confirmed.value, recovered.value, deaths.value],\r\n          },\r\n        ],\r\n      }}\r\n      options={{\r\n        legend: { display: false },\r\n        title: { display: true, text: `Current state in ${country}` },\r\n      }}\r\n    />\r\n  ) : null;\r\n\r\n  return (\r\n    <div className={styles.container}>{country ? barChart : lineChart}</div>\r\n  );\r\n}\r\n\r\nexport default Chart;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { NativeSelect, FormControl } from \"@material-ui/core\";\r\nimport styles from \"./Picker.module.css\";\r\nimport { fetchContries } from \"../../api\";\r\n\r\nfunction CountryPicker({ handleCountries }) {\r\n  const [theCountries, setTheCountries] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const getContries = async () => {\r\n      setTheCountries(await fetchContries());\r\n    };\r\n\r\n    return getContries();\r\n  }, [setTheCountries]);\r\n\r\n  return (\r\n    <FormControl className={styles.formControl}>\r\n      <NativeSelect\r\n        defaultValue=\"\"\r\n        onChange={(e) => handleCountries(e.target.value)}\r\n      >\r\n        <option value=\"\">Global</option>\r\n        {theCountries.map((country, i) => (\r\n          <option key={i} value={country}>\r\n            {country}\r\n          </option>\r\n        ))}\r\n      </NativeSelect>\r\n    </FormControl>\r\n  );\r\n}\r\n\r\nexport default CountryPicker;\r\n","export default __webpack_public_path__ + \"static/media/image.9e5d4fc7.png\";","import React, { Component } from \"react\";\r\nimport { Cards, Chart, CountryPicker } from \"./components\";\r\n\r\nimport styles from \"./App.module.css\";\r\nimport { fetchData } from \"./api\";\r\nimport logo from \"./image.png\";\r\n\r\nexport default class App extends Component {\r\n  state = {\r\n    data: {},\r\n    country: \"\",\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const fetchedData = await fetchData();\r\n    this.setState({ data: fetchedData });\r\n  }\r\n\r\n  handleCountries = async (country) => {\r\n    const fetchedData = await fetchData(country);\r\n    this.setState({ data: fetchedData, country: country });\r\n  };\r\n\r\n  render() {\r\n    const { data, country } = this.state;\r\n\r\n    return (\r\n      <div className={styles.container}>\r\n        <img src={logo} alt=\"COVID-19\" className={styles.logo} />\r\n        <Cards data={data} />\r\n        <CountryPicker handleCountries={this.handleCountries} />\r\n        <Chart data={data} country={country} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__1RuKC\",\"logo\":\"App_logo__3mUmH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__B55ea\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"Picker_formControl__3NBJF\"};"],"sourceRoot":""}